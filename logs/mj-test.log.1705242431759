INFO  15:26:31,818 - Compiling source file: C:\Users\Vijesti\Desktop\pp1 projekat\pp1lab.templateAST\workspace\MJCompiler\test\err_detection.mj
INFO  15:26:31,848 - #2 program
INFO  15:26:31,848 - #48 MojProgram
INFO  15:26:31,848 - #3 namespace
INFO  15:26:31,848 - #48 Konstante
INFO  15:26:31,848 - #18 {
INFO  15:26:31,850 - #16 const
INFO  15:26:31,850 - #48 int
INFO  15:26:31,850 - #48 nula
INFO  15:26:31,850 - #24 =
INFO  15:26:31,850 - #47 0
INFO  15:26:31,850 - #40 ;
INFO  15:26:31,850 - #16 const
INFO  15:26:31,851 - #48 int
INFO  15:26:31,851 - #48 jedan
INFO  15:26:31,851 - #24 =
INFO  15:26:31,851 - #47 1
INFO  15:26:31,851 - #40 ;
INFO  15:26:31,851 - #16 const
INFO  15:26:31,851 - #48 int
INFO  15:26:31,851 - #48 pet
INFO  15:26:31,851 - #24 =
INFO  15:26:31,851 - #47 5
INFO  15:26:31,851 - #40 ;
INFO  15:26:31,851 - #18 {
INFO  15:26:31,851 - #19 }
INFO  15:26:31,852 - #19 }
INFO  15:26:31,852 - #3 namespace
INFO  15:26:31,852 - #48 Nizovi
INFO  15:26:31,852 - #18 {
INFO  15:26:31,852 - #48 int
INFO  15:26:31,852 - #48 niz
INFO  15:26:31,852 - #22 [
INFO  15:26:31,852 - #23 ]
INFO  15:26:31,852 - #40 ;
INFO  15:26:31,854 - #48 char
INFO  15:26:31,854 - #48 nizch
INFO  15:26:31,854 - #22 [
INFO  15:26:31,854 - #23 ]
INFO  15:26:31,854 - #40 ;
INFO  15:26:31,854 - #18 {
INFO  15:26:31,854 - #19 }
INFO  15:26:31,854 - #19 }
INFO  15:26:31,854 - #48 char
INFO  15:26:31,855 - #48 x
INFO  15:26:31,855 - #40 ;
INFO  15:26:31,855 - #48 oooo
INFO  15:26:31,855 - #40 ;
ERROR 15:26:31,855 - 
Sintaksna greska na liniji 19
INFO  15:26:31,855 - #48 int
INFO  15:26:31,855 - #48 g
INFO  15:26:31,855 - #22 [
INFO  15:26:31,856 - #23 ]
INFO  15:26:31,856 - #40 ;
INFO  15:26:31,856 - #48 int
INFO  15:26:31,856 - #47 7
ERROR 15:26:31,856 - 
Sintaksna greska na liniji 21
INFO  15:26:31,856 - #40 ;
INFO  15:26:31,856 - #48 int
INFO  15:26:31,856 - #41 ,
INFO  15:26:31,856 - #48 f
INFO  15:26:31,856 - #40 ;
INFO  15:26:31,856 - #18 {
INFO  15:26:31,857 - #48 int
INFO  15:26:31,857 - #48 k
INFO  15:26:31,857 - #20 (
INFO  15:26:31,857 - #48 char
INFO  15:26:31,857 - #48 n
INFO  15:26:31,857 - #41 ,
INFO  15:26:31,858 - #48 int
INFO  15:26:31,858 - #47 7
ERROR 15:26:31,858 - 
Sintaksna greska na liniji 27
INFO  15:26:31,858 - #21 )
INFO  15:26:31,858 - #18 {
INFO  15:26:31,858 - #6 return
INFO  15:26:31,858 - #47 1
INFO  15:26:31,859 - #40 ;
INFO  15:26:31,859 - #19 }
INFO  15:26:31,859 - #48 int
INFO  15:26:31,860 - #48 main
INFO  15:26:31,860 - #20 (
INFO  15:26:31,860 - #21 )
INFO  15:26:31,860 - #48 int
INFO  15:26:31,860 - #48 a
INFO  15:26:31,860 - #22 [
INFO  15:26:31,861 - #23 ]
INFO  15:26:31,861 - #40 ;
INFO  15:26:31,861 - #48 int
INFO  15:26:31,861 - #48 bodovi
INFO  15:26:31,861 - #40 ;
INFO  15:26:31,861 - #48 bool
INFO  15:26:31,861 - #48 bt
INFO  15:26:31,861 - #40 ;
INFO  15:26:31,861 - #18 {
INFO  15:26:31,861 - #48 bodovi
INFO  15:26:31,861 - #24 =
INFO  15:26:31,861 - #47 0
INFO  15:26:31,861 - #40 ;
INFO  15:26:31,861 - #48 a
INFO  15:26:31,862 - #24 =
INFO  15:26:31,862 - #12 new
INFO  15:26:31,862 - #48 int
INFO  15:26:31,862 - #22 [
INFO  15:26:31,862 - #47 7
INFO  15:26:31,862 - #23 ]
INFO  15:26:31,862 - #40 ;
INFO  15:26:31,862 - #48 g
INFO  15:26:31,862 - #24 =
INFO  15:26:31,862 - #12 new
INFO  15:26:31,862 - #48 int
INFO  15:26:31,862 - #22 [
INFO  15:26:31,862 - #47 10
INFO  15:26:31,862 - #23 ]
INFO  15:26:31,862 - #40 ;
INFO  15:26:31,862 - #48 g
INFO  15:26:31,862 - #24 =
INFO  15:26:31,862 - #48 x
INFO  15:26:31,862 - #40 ;
INFO  15:26:31,862 - #8 if
INFO  15:26:31,862 - #20 (
INFO  15:26:31,862 - #48 x
INFO  15:26:31,862 - #34 <
INFO  15:26:31,863 - #48 bodovi
INFO  15:26:31,863 - #21 )
INFO  15:26:31,863 - #48 bodovi
INFO  15:26:31,864 - #24 =
INFO  15:26:31,864 - #47 4
INFO  15:26:31,864 - #40 ;
INFO  15:26:31,864 - #9 else
INFO  15:26:31,865 - #48 bodovi
INFO  15:26:31,865 - #24 =
INFO  15:26:31,865 - #47 32
INFO  15:26:31,865 - #40 ;
INFO  15:26:31,867 - #5 print
INFO  15:26:31,867 - #20 (
INFO  15:26:31,867 - #48 bodovi
INFO  15:26:31,867 - #21 )
INFO  15:26:31,867 - #40 ;
INFO  15:26:31,867 - #6 return
INFO  15:26:31,867 - #47 0
INFO  15:26:31,867 - #40 ;
INFO  15:26:31,867 - #19 }
INFO  15:26:31,867 - #19 }
INFO  15:26:31,873 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  HasNamespace1(
    HasNamespace1(
      NoNamespace(
      ) [NoNamespace]
      HasNamespace(
        NamespaceName(
         Konstante
        ) [NamespaceName]
        Declarations(
          ConstDecls(
            ConstDecls(
              ConstDecls(
                NoDeclarations(
                ) [NoDeclarations]
                ConstDecl(
                  TypeNoScope(
                   int
                  ) [TypeNoScope]
                  NumConst(
                   nula
                   0
                  ) [NumConst]
                  NoMoreConstants(
                  ) [NoMoreConstants]
                ) [ConstDecl]
              ) [ConstDecls]
              ConstDecl(
                TypeNoScope(
                 int
                ) [TypeNoScope]
                NumConst(
                 jedan
                 1
                ) [NumConst]
                NoMoreConstants(
                ) [NoMoreConstants]
              ) [ConstDecl]
            ) [ConstDecls]
            ConstDecl(
              TypeNoScope(
               int
              ) [TypeNoScope]
              NumConst(
               pet
               5
              ) [NumConst]
              NoMoreConstants(
              ) [NoMoreConstants]
            ) [ConstDecl]
          ) [ConstDecls]
          NoMoreMethodDeclarations(
          ) [NoMoreMethodDeclarations]
        ) [Declarations]
      ) [HasNamespace]
    ) [HasNamespace1]
    HasNamespace(
      NamespaceName(
       Nizovi
      ) [NamespaceName]
      Declarations(
        VariableDeclaration2(
          VariableDeclaration2(
            NoDeclarations(
            ) [NoDeclarations]
            NoMoreVarDecl(
              TypeNoScope(
               int
              ) [TypeNoScope]
              VarSingleSemi(
               niz
                IsArray(
                ) [IsArray]
              ) [VarSingleSemi]
            ) [NoMoreVarDecl]
          ) [VariableDeclaration2]
          NoMoreVarDecl(
            TypeNoScope(
             char
            ) [TypeNoScope]
            VarSingleSemi(
             nizch
              IsArray(
              ) [IsArray]
            ) [VarSingleSemi]
          ) [NoMoreVarDecl]
        ) [VariableDeclaration2]
        NoMoreMethodDeclarations(
        ) [NoMoreMethodDeclarations]
      ) [Declarations]
    ) [HasNamespace]
  ) [HasNamespace1]
  VariableDeclaration2(
    VariableDeclaration2(
      VariableDeclaration2(
        VariableDeclaration2(
          NoDeclarations(
          ) [NoDeclarations]
          NoMoreVarDecl(
            TypeNoScope(
             char
            ) [TypeNoScope]
            VarSingleSemi(
             x
              NotArray(
              ) [NotArray]
            ) [VarSingleSemi]
          ) [NoMoreVarDecl]
        ) [VariableDeclaration2]
        ErrorVarDeclSemi(
        ) [ErrorVarDeclSemi]
      ) [VariableDeclaration2]
      NoMoreVarDecl(
        TypeNoScope(
         int
        ) [TypeNoScope]
        VarSingleSemi(
         g
          IsArray(
          ) [IsArray]
        ) [VarSingleSemi]
      ) [NoMoreVarDecl]
    ) [VariableDeclaration2]
    ErrorVarDeclSemi(
    ) [ErrorVarDeclSemi]
  ) [VariableDeclaration2]
  MoreMethodDecls(
    MoreMethodDecls(
      NoMoreMethodDeclarations(
      ) [NoMoreMethodDeclarations]
      MethodDeclaration(
        MethodTypeName(
          NonVoidRetType(
            TypeNoScope(
             int
            ) [TypeNoScope]
          ) [NonVoidRetType]
         k
        ) [MethodTypeName]
        ErrorFormalParamsParen(
        ) [ErrorFormalParamsParen]
        NoMoreVarDecls1(
        ) [NoMoreVarDecls1]
        SetLevel(
        ) [SetLevel]
        Statements(
          NoStatement(
          ) [NoStatement]
          ReturnStatementExpr(
            OneTermExpr(
              OneFactor(
                FactorNum(
                 1
                ) [FactorNum]
              ) [OneFactor]
            ) [OneTermExpr]
          ) [ReturnStatementExpr]
        ) [Statements]
      ) [MethodDeclaration]
    ) [MoreMethodDecls]
    MethodDeclaration(
      MethodTypeName(
        NonVoidRetType(
          TypeNoScope(
           int
          ) [TypeNoScope]
        ) [NonVoidRetType]
       main
      ) [MethodTypeName]
      NoFormalParams(
      ) [NoFormalParams]
      VarDeclarations(
        VarDeclarations(
          VarDeclarations(
            NoMoreVarDecls1(
            ) [NoMoreVarDecls1]
            NoMoreVarDecl(
              TypeNoScope(
               int
              ) [TypeNoScope]
              VarSingleSemi(
               a
                IsArray(
                ) [IsArray]
              ) [VarSingleSemi]
            ) [NoMoreVarDecl]
          ) [VarDeclarations]
          NoMoreVarDecl(
            TypeNoScope(
             int
            ) [TypeNoScope]
            VarSingleSemi(
             bodovi
              NotArray(
              ) [NotArray]
            ) [VarSingleSemi]
          ) [NoMoreVarDecl]
        ) [VarDeclarations]
        NoMoreVarDecl(
          TypeNoScope(
           bool
          ) [TypeNoScope]
          VarSingleSemi(
           bt
            NotArray(
            ) [NotArray]
          ) [VarSingleSemi]
        ) [NoMoreVarDecl]
      ) [VarDeclarations]
      SetLevel(
      ) [SetLevel]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatement(
                    ) [NoStatement]
                    DesignStatement(
                      DesignatorStatementSemi(
                        DesignatorEqual(
                          DesignatorIdent(
                           bodovi
                          ) [DesignatorIdent]
                          OneTermExpr(
                            OneFactor(
                              FactorNum(
                               0
                              ) [FactorNum]
                            ) [OneFactor]
                          ) [OneTermExpr]
                        ) [DesignatorEqual]
                      ) [DesignatorStatementSemi]
                    ) [DesignStatement]
                  ) [Statements]
                  DesignStatement(
                    DesignatorStatementSemi(
                      DesignatorEqual(
                        DesignatorIdent(
                         a
                        ) [DesignatorIdent]
                        OneTermExpr(
                          OneFactor(
                            FactorNew(
                              TypeNoScope(
                               int
                              ) [TypeNoScope]
                              OneTermExpr(
                                OneFactor(
                                  FactorNum(
                                   7
                                  ) [FactorNum]
                                ) [OneFactor]
                              ) [OneTermExpr]
                            ) [FactorNew]
                          ) [OneFactor]
                        ) [OneTermExpr]
                      ) [DesignatorEqual]
                    ) [DesignatorStatementSemi]
                  ) [DesignStatement]
                ) [Statements]
                DesignStatement(
                  DesignatorStatementSemi(
                    DesignatorEqual(
                      DesignatorIdent(
                       g
                      ) [DesignatorIdent]
                      OneTermExpr(
                        OneFactor(
                          FactorNew(
                            TypeNoScope(
                             int
                            ) [TypeNoScope]
                            OneTermExpr(
                              OneFactor(
                                FactorNum(
                                 10
                                ) [FactorNum]
                              ) [OneFactor]
                            ) [OneTermExpr]
                          ) [FactorNew]
                        ) [OneFactor]
                      ) [OneTermExpr]
                    ) [DesignatorEqual]
                  ) [DesignatorStatementSemi]
                ) [DesignStatement]
              ) [Statements]
              DesignStatement(
                DesignatorStatementSemi(
                  DesignatorEqual(
                    DesignatorIdent(
                     g
                    ) [DesignatorIdent]
                    OneTermExpr(
                      OneFactor(
                        FactorDesignator(
                          DesignatorIdent(
                           x
                          ) [DesignatorIdent]
                        ) [FactorDesignator]
                      ) [OneFactor]
                    ) [OneTermExpr]
                  ) [DesignatorEqual]
                ) [DesignatorStatementSemi]
              ) [DesignStatement]
            ) [Statements]
            IfElseStatement(
              IfConditional(
                TermCondition(
                  FactCondition(
                    CondFactRelop(
                      OneTermExpr(
                        OneFactor(
                          FactorDesignator(
                            DesignatorIdent(
                             x
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [OneFactor]
                      ) [OneTermExpr]
                      Less(
                      ) [Less]
                      OneTermExpr(
                        OneFactor(
                          FactorDesignator(
                            DesignatorIdent(
                             bodovi
                            ) [DesignatorIdent]
                          ) [FactorDesignator]
                        ) [OneFactor]
                      ) [OneTermExpr]
                    ) [CondFactRelop]
                  ) [FactCondition]
                ) [TermCondition]
                EndOfIfCondition(
                ) [EndOfIfCondition]
              ) [IfConditional]
              DesignStatement(
                DesignatorStatementSemi(
                  DesignatorEqual(
                    DesignatorIdent(
                     bodovi
                    ) [DesignatorIdent]
                    OneTermExpr(
                      OneFactor(
                        FactorNum(
                         4
                        ) [FactorNum]
                      ) [OneFactor]
                    ) [OneTermExpr]
                  ) [DesignatorEqual]
                ) [DesignatorStatementSemi]
              ) [DesignStatement]
              AfterIf(
              ) [AfterIf]
              DesignStatement(
                DesignatorStatementSemi(
                  DesignatorEqual(
                    DesignatorIdent(
                     bodovi
                    ) [DesignatorIdent]
                    OneTermExpr(
                      OneFactor(
                        FactorNum(
                         32
                        ) [FactorNum]
                      ) [OneFactor]
                    ) [OneTermExpr]
                  ) [DesignatorEqual]
                ) [DesignatorStatementSemi]
              ) [DesignStatement]
            ) [IfElseStatement]
          ) [Statements]
          PrintStatement(
            OneTermExpr(
              OneFactor(
                FactorDesignator(
                  DesignatorIdent(
                   bodovi
                  ) [DesignatorIdent]
                ) [FactorDesignator]
              ) [OneFactor]
            ) [OneTermExpr]
          ) [PrintStatement]
        ) [Statements]
        ReturnStatementExpr(
          OneTermExpr(
            OneFactor(
              FactorNum(
               0
              ) [FactorNum]
            ) [OneFactor]
          ) [OneTermExpr]
        ) [ReturnStatementExpr]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MoreMethodDecls]
) [Program]
INFO  15:26:31,873 - ============================================
INFO  15:26:31,875 - Koriscenje promenljive bodovi [Var bodovi: int, 1, 1 ] na liniji 37
INFO  15:26:31,875 - Koriscenje promenljive a [Var a: Arr of int, 0, 1 ] na liniji 39
INFO  15:26:31,876 - Koriscenje promenljive g [Var g: Arr of int, 3, 0 ] na liniji 40
INFO  15:26:31,876 - Koriscenje promenljive g [Var g: Arr of int, 3, 0 ] na liniji 42
INFO  15:26:31,876 - Koriscenje promenljive x [Var x: char, 2, 0 ] na liniji 42
ERROR 15:26:31,876 - Tip izraza koji se dodeljuje 2 nije kompatibilan sa promenljivom 1 na liniji 42
INFO  15:26:31,876 - Koriscenje promenljive x [Var x: char, 2, 0 ] na liniji 44
INFO  15:26:31,876 - Koriscenje promenljive bodovi [Var bodovi: int, 1, 1 ] na liniji 44
ERROR 15:26:31,876 - Sabirci moraju biti kompatibilni  na liniji 44
INFO  15:26:31,876 - Koriscenje promenljive bodovi [Var bodovi: int, 1, 1 ] na liniji 44
INFO  15:26:31,876 - Koriscenje promenljive bodovi [Var bodovi: int, 1, 1 ] na liniji 44
INFO  15:26:31,876 - Koriscenje promenljive bodovi [Var bodovi: int, 1, 1 ] na liniji 45
INFO  15:26:31,876 - Poziv metode print() na liniji 45
INFO  15:26:31,876 - ============================================
INFO  15:26:31,877 - Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: , -1, -1 
Prog MojProgram: notype, 0, 1 
   Con Konstante::nula: int, 0, 0 
   Con Konstante::jedan: int, 1, 0 
   Con Konstante::pet: int, 5, 0 
   Var Nizovi::niz: Arr of int, 0, 0 
   Var Nizovi::nizch: Arr of char, 1, 0 
   Var x: char, 2, 0 
   Var g: Arr of int, 3, 0 
   Meth k: int, 0, 0 

   Meth main: int, 0, 0 
      Var a: Arr of int, 0, 1 
      Var bodovi: int, 1, 1 
      Var bt: , 2, 1 



INFO  15:26:31,877 - Parsiranje NIJE uspesno zavrseno!
