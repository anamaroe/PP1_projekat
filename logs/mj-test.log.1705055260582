INFO  11:27:19,319 - Compiling source file: C:\Users\Vijesti\Desktop\pp1 projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:27:19,388 - #2 program
INFO  11:27:19,388 - #48 MojProgram
INFO  11:27:19,388 - #3 namespace
INFO  11:27:19,390 - #48 Konstante
INFO  11:27:19,390 - #18 {
INFO  11:27:19,391 - #16 const
INFO  11:27:19,391 - #48 int
INFO  11:27:19,391 - #48 nula
INFO  11:27:19,392 - #24 =
INFO  11:27:19,392 - #47 0
INFO  11:27:19,392 - #40 ;
INFO  11:27:19,393 - #16 const
INFO  11:27:19,393 - #48 int
INFO  11:27:19,393 - #48 jedan
INFO  11:27:19,393 - #24 =
INFO  11:27:19,394 - #47 1
INFO  11:27:19,394 - #40 ;
INFO  11:27:19,394 - #48 int
INFO  11:27:19,394 - #48 pet
INFO  11:27:19,394 - #40 ;
INFO  11:27:19,396 - #18 {
INFO  11:27:19,396 - #19 }
INFO  11:27:19,397 - #19 }
INFO  11:27:19,398 - #48 int
INFO  11:27:19,398 - #48 x
INFO  11:27:19,398 - #40 ;
INFO  11:27:19,399 - #48 int
INFO  11:27:19,399 - #48 y
INFO  11:27:19,399 - #40 ;
INFO  11:27:19,399 - #48 int
INFO  11:27:19,399 - #48 niz
INFO  11:27:19,399 - #22 [
INFO  11:27:19,399 - #23 ]
INFO  11:27:19,399 - #40 ;
INFO  11:27:19,400 - #18 {
INFO  11:27:19,400 - #48 int
INFO  11:27:19,400 - #48 main
INFO  11:27:19,400 - #20 (
INFO  11:27:19,401 - #21 )
INFO  11:27:19,401 - #18 {
INFO  11:27:19,402 - #48 Konstante
INFO  11:27:19,402 - #44 :
INFO  11:27:19,402 - #44 :
INFO  11:27:19,402 - #48 pet
INFO  11:27:19,402 - #24 =
INFO  11:27:19,403 - #47 5
INFO  11:27:19,403 - #40 ;
INFO  11:27:19,404 - #48 x
INFO  11:27:19,404 - #24 =
INFO  11:27:19,404 - #47 3
INFO  11:27:19,404 - #40 ;
INFO  11:27:19,404 - #48 Konstante
INFO  11:27:19,405 - #44 :
INFO  11:27:19,405 - #44 :
INFO  11:27:19,405 - #48 pet
INFO  11:27:19,405 - #24 =
INFO  11:27:19,405 - #47 2
INFO  11:27:19,405 - #40 ;
INFO  11:27:19,405 - #5 print
INFO  11:27:19,405 - #20 (
INFO  11:27:19,405 - #45 true
INFO  11:27:19,405 - #41 ,
INFO  11:27:19,406 - #47 10
INFO  11:27:19,406 - #21 )
INFO  11:27:19,406 - #40 ;
INFO  11:27:19,406 - #5 print
INFO  11:27:19,406 - #20 (
INFO  11:27:19,407 - #46 a
INFO  11:27:19,407 - #41 ,
INFO  11:27:19,407 - #47 1
INFO  11:27:19,407 - #21 )
INFO  11:27:19,407 - #40 ;
INFO  11:27:19,407 - #5 print
INFO  11:27:19,407 - #20 (
INFO  11:27:19,407 - #26 -
INFO  11:27:19,407 - #48 Konstante
INFO  11:27:19,407 - #44 :
INFO  11:27:19,407 - #44 :
INFO  11:27:19,408 - #48 pet
INFO  11:27:19,408 - #25 +
INFO  11:27:19,408 - #47 2
INFO  11:27:19,411 - #41 ,
INFO  11:27:19,412 - #47 10
INFO  11:27:19,412 - #21 )
INFO  11:27:19,412 - #40 ;
INFO  11:27:19,412 - #5 print
INFO  11:27:19,412 - #20 (
INFO  11:27:19,412 - #47 9
INFO  11:27:19,412 - #26 -
INFO  11:27:19,413 - #47 8
INFO  11:27:19,413 - #25 +
INFO  11:27:19,413 - #47 17
INFO  11:27:19,413 - #21 )
INFO  11:27:19,413 - #40 ;
INFO  11:27:19,413 - #6 return
INFO  11:27:19,414 - #47 0
INFO  11:27:19,414 - #40 ;
INFO  11:27:19,414 - #19 }
INFO  11:27:19,414 - #19 }
INFO  11:27:19,421 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  HasNamespace1(
    NoNamespace(
    ) [NoNamespace]
    HasNamespace(
      NamespaceName(
       Konstante
      ) [NamespaceName]
      Declarations(
        VariableDeclaration2(
          ConstDecls(
            ConstDecls(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDecl(
                TypeNoScope(
                 int
                ) [TypeNoScope]
                NumConst(
                 nula
                 0
                ) [NumConst]
                NoMoreConstants(
                ) [NoMoreConstants]
              ) [ConstDecl]
            ) [ConstDecls]
            ConstDecl(
              TypeNoScope(
               int
              ) [TypeNoScope]
              NumConst(
               jedan
               1
              ) [NumConst]
              NoMoreConstants(
              ) [NoMoreConstants]
            ) [ConstDecl]
          ) [ConstDecls]
          NoMoreVarDecl(
            TypeNoScope(
             int
            ) [TypeNoScope]
            VarSingleSemi(
             pet
              NotArray(
              ) [NotArray]
            ) [VarSingleSemi]
          ) [NoMoreVarDecl]
        ) [VariableDeclaration2]
        NoMoreMethodDeclarations(
        ) [NoMoreMethodDeclarations]
      ) [Declarations]
    ) [HasNamespace]
  ) [HasNamespace1]
  VariableDeclaration2(
    VariableDeclaration2(
      VariableDeclaration2(
        NoDeclarations(
        ) [NoDeclarations]
        NoMoreVarDecl(
          TypeNoScope(
           int
          ) [TypeNoScope]
          VarSingleSemi(
           x
            NotArray(
            ) [NotArray]
          ) [VarSingleSemi]
        ) [NoMoreVarDecl]
      ) [VariableDeclaration2]
      NoMoreVarDecl(
        TypeNoScope(
         int
        ) [TypeNoScope]
        VarSingleSemi(
         y
          NotArray(
          ) [NotArray]
        ) [VarSingleSemi]
      ) [NoMoreVarDecl]
    ) [VariableDeclaration2]
    NoMoreVarDecl(
      TypeNoScope(
       int
      ) [TypeNoScope]
      VarSingleSemi(
       niz
        IsArray(
        ) [IsArray]
      ) [VarSingleSemi]
    ) [NoMoreVarDecl]
  ) [VariableDeclaration2]
  MoreMethodDecls(
    NoMoreMethodDeclarations(
    ) [NoMoreMethodDeclarations]
    MethodDeclaration(
      MethodTypeName(
        NonVoidRetType(
          TypeNoScope(
           int
          ) [TypeNoScope]
        ) [NonVoidRetType]
       main
      ) [MethodTypeName]
      NoFormalParams(
      ) [NoFormalParams]
      NoMoreVarDecls1(
      ) [NoMoreVarDecls1]
      SetLevel(
      ) [SetLevel]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatement(
                      ) [NoStatement]
                      DesignStatement(
                        DesignatorStatementSemi(
                          DesignatorEqual(
                            DesignatorScopedIdent(
                             Konstante
                             pet
                            ) [DesignatorScopedIdent]
                            OneTermExpr(
                              OneFactor(
                                FactorNum(
                                 5
                                ) [FactorNum]
                              ) [OneFactor]
                            ) [OneTermExpr]
                          ) [DesignatorEqual]
                        ) [DesignatorStatementSemi]
                      ) [DesignStatement]
                    ) [Statements]
                    DesignStatement(
                      DesignatorStatementSemi(
                        DesignatorEqual(
                          DesignatorIdent(
                           x
                          ) [DesignatorIdent]
                          OneTermExpr(
                            OneFactor(
                              FactorNum(
                               3
                              ) [FactorNum]
                            ) [OneFactor]
                          ) [OneTermExpr]
                        ) [DesignatorEqual]
                      ) [DesignatorStatementSemi]
                    ) [DesignStatement]
                  ) [Statements]
                  DesignStatement(
                    DesignatorStatementSemi(
                      DesignatorEqual(
                        DesignatorScopedIdent(
                         Konstante
                         pet
                        ) [DesignatorScopedIdent]
                        OneTermExpr(
                          OneFactor(
                            FactorNum(
                             2
                            ) [FactorNum]
                          ) [OneFactor]
                        ) [OneTermExpr]
                      ) [DesignatorEqual]
                    ) [DesignatorStatementSemi]
                  ) [DesignStatement]
                ) [Statements]
                PrintWidthStatement(
                  OneTermExpr(
                    OneFactor(
                      FactorBool(
                       true
                      ) [FactorBool]
                    ) [OneFactor]
                  ) [OneTermExpr]
                 10
                ) [PrintWidthStatement]
              ) [Statements]
              PrintWidthStatement(
                OneTermExpr(
                  OneFactor(
                    FactorChar(
                     a
                    ) [FactorChar]
                  ) [OneFactor]
                ) [OneTermExpr]
               1
              ) [PrintWidthStatement]
            ) [Statements]
            PrintWidthStatement(
              ExpressionList(
                NegTermExpr(
                  OneFactor(
                    FactorDesignator(
                      DesignatorScopedIdent(
                       Konstante
                       pet
                      ) [DesignatorScopedIdent]
                    ) [FactorDesignator]
                  ) [OneFactor]
                ) [NegTermExpr]
                Add(
                ) [Add]
                OneFactor(
                  FactorNum(
                   2
                  ) [FactorNum]
                ) [OneFactor]
              ) [ExpressionList]
             10
            ) [PrintWidthStatement]
          ) [Statements]
          PrintStatement(
            ExpressionList(
              ExpressionList(
                OneTermExpr(
                  OneFactor(
                    FactorNum(
                     9
                    ) [FactorNum]
                  ) [OneFactor]
                ) [OneTermExpr]
                Sub(
                ) [Sub]
                OneFactor(
                  FactorNum(
                   8
                  ) [FactorNum]
                ) [OneFactor]
              ) [ExpressionList]
              Add(
              ) [Add]
              OneFactor(
                FactorNum(
                 17
                ) [FactorNum]
              ) [OneFactor]
            ) [ExpressionList]
          ) [PrintStatement]
        ) [Statements]
        ReturnStatementExpr(
          OneTermExpr(
            OneFactor(
              FactorNum(
               0
              ) [FactorNum]
            ) [OneFactor]
          ) [OneTermExpr]
        ) [ReturnStatementExpr]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MoreMethodDecls]
) [Program]
INFO  11:27:19,421 - ============================================
INFO  11:27:19,425 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 15
INFO  11:27:19,425 - Koriscenje promenljive x [Var x: int, 1, 0 ] na liniji 16
INFO  11:27:19,425 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 17
INFO  11:27:19,425 - Poziv metode print() na liniji 18
INFO  11:27:19,425 - Poziv metode print() na liniji 19
INFO  11:27:19,425 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 20
INFO  11:27:19,425 - adasdadsAdd(
) [Add]
INFO  11:27:19,425 - Poziv metode print() na liniji 20
INFO  11:27:19,425 - adasdadsSub(
) [Sub]
INFO  11:27:19,426 - adasdadsAdd(
) [Add]
INFO  11:27:19,426 - Poziv metode print() na liniji 21
INFO  11:27:19,426 - ============================================
INFO  11:27:19,426 - Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: , -1, -1 
Prog MojProgram: notype, 0, 1 
   Con Konstante::nula: int, 0, 0 
   Con Konstante::jedan: int, 1, 0 
   Var Konstante::pet: int, 0, 0 
   Var x: int, 1, 0 
   Var y: int, 2, 0 
   Var niz: Arr of int, 3, 0 
   Meth main: int, 0, 0 



INFO  11:27:19,432 - Parsiranje uspesno zavrseno!
