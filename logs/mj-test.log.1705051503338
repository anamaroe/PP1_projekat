INFO  10:24:09,096 - Compiling source file: C:\Users\Vijesti\Desktop\pp1 projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  10:24:09,135 - #2 program
INFO  10:24:09,135 - #48 MojProgram
INFO  10:24:09,135 - #3 namespace
INFO  10:24:09,137 - #48 Konstante
INFO  10:24:09,137 - #18 {
INFO  10:24:09,137 - #16 const
INFO  10:24:09,138 - #48 int
INFO  10:24:09,138 - #48 nula
INFO  10:24:09,138 - #24 =
INFO  10:24:09,138 - #47 0
INFO  10:24:09,138 - #40 ;
INFO  10:24:09,138 - #16 const
INFO  10:24:09,139 - #48 int
INFO  10:24:09,139 - #48 jedan
INFO  10:24:09,139 - #24 =
INFO  10:24:09,139 - #47 1
INFO  10:24:09,139 - #40 ;
INFO  10:24:09,139 - #48 int
INFO  10:24:09,139 - #48 pet
INFO  10:24:09,139 - #40 ;
INFO  10:24:09,140 - #18 {
INFO  10:24:09,141 - #19 }
INFO  10:24:09,142 - #19 }
INFO  10:24:09,143 - #48 int
INFO  10:24:09,143 - #48 x
INFO  10:24:09,144 - #40 ;
INFO  10:24:09,144 - #48 int
INFO  10:24:09,144 - #48 y
INFO  10:24:09,144 - #40 ;
INFO  10:24:09,144 - #48 int
INFO  10:24:09,144 - #48 niz
INFO  10:24:09,144 - #22 [
INFO  10:24:09,144 - #23 ]
INFO  10:24:09,144 - #40 ;
INFO  10:24:09,146 - #18 {
INFO  10:24:09,146 - #48 int
INFO  10:24:09,146 - #48 main
INFO  10:24:09,146 - #20 (
INFO  10:24:09,147 - #21 )
INFO  10:24:09,147 - #18 {
INFO  10:24:09,148 - #48 Konstante
INFO  10:24:09,148 - #44 :
INFO  10:24:09,148 - #44 :
INFO  10:24:09,148 - #48 pet
INFO  10:24:09,148 - #24 =
INFO  10:24:09,148 - #47 5
INFO  10:24:09,148 - #40 ;
INFO  10:24:09,149 - #48 x
INFO  10:24:09,149 - #24 =
INFO  10:24:09,149 - #47 3
INFO  10:24:09,149 - #40 ;
INFO  10:24:09,149 - #48 Konstante
INFO  10:24:09,149 - #44 :
INFO  10:24:09,149 - #44 :
INFO  10:24:09,150 - #48 pet
INFO  10:24:09,150 - #24 =
INFO  10:24:09,150 - #47 2
INFO  10:24:09,150 - #40 ;
INFO  10:24:09,150 - #5 print
INFO  10:24:09,150 - #20 (
INFO  10:24:09,150 - #45 true
INFO  10:24:09,150 - #21 )
INFO  10:24:09,150 - #40 ;
INFO  10:24:09,150 - #5 print
INFO  10:24:09,151 - #20 (
INFO  10:24:09,151 - #46 a
INFO  10:24:09,152 - #21 )
INFO  10:24:09,152 - #40 ;
INFO  10:24:09,155 - #5 print
INFO  10:24:09,155 - #20 (
INFO  10:24:09,155 - #26 -
INFO  10:24:09,155 - #48 Konstante
INFO  10:24:09,155 - #44 :
INFO  10:24:09,155 - #44 :
INFO  10:24:09,155 - #48 pet
INFO  10:24:09,155 - #21 )
INFO  10:24:09,155 - #40 ;
INFO  10:24:09,155 - #5 print
INFO  10:24:09,155 - #20 (
INFO  10:24:09,155 - #26 -
INFO  10:24:09,155 - #47 9
INFO  10:24:09,155 - #21 )
INFO  10:24:09,155 - #40 ;
INFO  10:24:09,155 - #5 print
INFO  10:24:09,156 - #20 (
INFO  10:24:09,156 - #47 3
INFO  10:24:09,156 - #25 +
INFO  10:24:09,156 - #47 7
INFO  10:24:09,156 - #21 )
INFO  10:24:09,157 - #40 ;
INFO  10:24:09,157 - #6 return
INFO  10:24:09,157 - #47 0
INFO  10:24:09,157 - #40 ;
INFO  10:24:09,157 - #19 }
INFO  10:24:09,157 - #19 }
INFO  10:24:09,166 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  HasNamespace1(
    NoNamespace(
    ) [NoNamespace]
    HasNamespace(
      NamespaceName(
       Konstante
      ) [NamespaceName]
      Declarations(
        VariableDeclaration2(
          ConstDecls(
            ConstDecls(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDecl(
                TypeNoScope(
                 int
                ) [TypeNoScope]
                NumConst(
                 nula
                 0
                ) [NumConst]
                NoMoreConstants(
                ) [NoMoreConstants]
              ) [ConstDecl]
            ) [ConstDecls]
            ConstDecl(
              TypeNoScope(
               int
              ) [TypeNoScope]
              NumConst(
               jedan
               1
              ) [NumConst]
              NoMoreConstants(
              ) [NoMoreConstants]
            ) [ConstDecl]
          ) [ConstDecls]
          NoMoreVarDecl(
            TypeNoScope(
             int
            ) [TypeNoScope]
            VarSingleSemi(
             pet
              NotArray(
              ) [NotArray]
            ) [VarSingleSemi]
          ) [NoMoreVarDecl]
        ) [VariableDeclaration2]
        NoMoreMethodDeclarations(
        ) [NoMoreMethodDeclarations]
      ) [Declarations]
    ) [HasNamespace]
  ) [HasNamespace1]
  VariableDeclaration2(
    VariableDeclaration2(
      VariableDeclaration2(
        NoDeclarations(
        ) [NoDeclarations]
        NoMoreVarDecl(
          TypeNoScope(
           int
          ) [TypeNoScope]
          VarSingleSemi(
           x
            NotArray(
            ) [NotArray]
          ) [VarSingleSemi]
        ) [NoMoreVarDecl]
      ) [VariableDeclaration2]
      NoMoreVarDecl(
        TypeNoScope(
         int
        ) [TypeNoScope]
        VarSingleSemi(
         y
          NotArray(
          ) [NotArray]
        ) [VarSingleSemi]
      ) [NoMoreVarDecl]
    ) [VariableDeclaration2]
    NoMoreVarDecl(
      TypeNoScope(
       int
      ) [TypeNoScope]
      VarSingleSemi(
       niz
        IsArray(
        ) [IsArray]
      ) [VarSingleSemi]
    ) [NoMoreVarDecl]
  ) [VariableDeclaration2]
  MoreMethodDecls(
    NoMoreMethodDeclarations(
    ) [NoMoreMethodDeclarations]
    MethodDeclaration(
      MethodTypeName(
        NonVoidRetType(
          TypeNoScope(
           int
          ) [TypeNoScope]
        ) [NonVoidRetType]
       main
      ) [MethodTypeName]
      NoFormalParams(
      ) [NoFormalParams]
      NoMoreVarDecls1(
      ) [NoMoreVarDecls1]
      SetLevel(
      ) [SetLevel]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatement(
                        ) [NoStatement]
                        DesignStatement(
                          DesignatorStatementSemi(
                            DesignatorEqual(
                              DesignatorScopedIdent(
                               Konstante
                               pet
                              ) [DesignatorScopedIdent]
                              OneTermExpr(
                                OneFactor(
                                  FactorNum(
                                   5
                                  ) [FactorNum]
                                ) [OneFactor]
                              ) [OneTermExpr]
                            ) [DesignatorEqual]
                          ) [DesignatorStatementSemi]
                        ) [DesignStatement]
                      ) [Statements]
                      DesignStatement(
                        DesignatorStatementSemi(
                          DesignatorEqual(
                            DesignatorIdent(
                             x
                            ) [DesignatorIdent]
                            OneTermExpr(
                              OneFactor(
                                FactorNum(
                                 3
                                ) [FactorNum]
                              ) [OneFactor]
                            ) [OneTermExpr]
                          ) [DesignatorEqual]
                        ) [DesignatorStatementSemi]
                      ) [DesignStatement]
                    ) [Statements]
                    DesignStatement(
                      DesignatorStatementSemi(
                        DesignatorEqual(
                          DesignatorScopedIdent(
                           Konstante
                           pet
                          ) [DesignatorScopedIdent]
                          OneTermExpr(
                            OneFactor(
                              FactorNum(
                               2
                              ) [FactorNum]
                            ) [OneFactor]
                          ) [OneTermExpr]
                        ) [DesignatorEqual]
                      ) [DesignatorStatementSemi]
                    ) [DesignStatement]
                  ) [Statements]
                  PrintStatement(
                    OneTermExpr(
                      OneFactor(
                        FactorBool(
                         true
                        ) [FactorBool]
                      ) [OneFactor]
                    ) [OneTermExpr]
                  ) [PrintStatement]
                ) [Statements]
                PrintStatement(
                  OneTermExpr(
                    OneFactor(
                      FactorChar(
                       a
                      ) [FactorChar]
                    ) [OneFactor]
                  ) [OneTermExpr]
                ) [PrintStatement]
              ) [Statements]
              PrintStatement(
                NegTermExpr(
                  OneFactor(
                    FactorDesignator(
                      DesignatorScopedIdent(
                       Konstante
                       pet
                      ) [DesignatorScopedIdent]
                    ) [FactorDesignator]
                  ) [OneFactor]
                ) [NegTermExpr]
              ) [PrintStatement]
            ) [Statements]
            PrintStatement(
              NegTermExpr(
                OneFactor(
                  FactorNum(
                   9
                  ) [FactorNum]
                ) [OneFactor]
              ) [NegTermExpr]
            ) [PrintStatement]
          ) [Statements]
          PrintStatement(
            ExpressionList(
              OneTermExpr(
                OneFactor(
                  FactorNum(
                   3
                  ) [FactorNum]
                ) [OneFactor]
              ) [OneTermExpr]
              Add(
              ) [Add]
              OneFactor(
                FactorNum(
                 7
                ) [FactorNum]
              ) [OneFactor]
            ) [ExpressionList]
          ) [PrintStatement]
        ) [Statements]
        ReturnStatementExpr(
          OneTermExpr(
            OneFactor(
              FactorNum(
               0
              ) [FactorNum]
            ) [OneFactor]
          ) [OneTermExpr]
        ) [ReturnStatementExpr]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MoreMethodDecls]
) [Program]
INFO  10:24:09,166 - ============================================
INFO  10:24:09,169 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 15
INFO  10:24:09,169 - Koriscenje promenljive x [Var x: int, 1, 0 ] na liniji 16
INFO  10:24:09,169 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 17
INFO  10:24:09,169 - Poziv metode print() na liniji 18
INFO  10:24:09,169 - Poziv metode print() na liniji 19
INFO  10:24:09,169 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 20
INFO  10:24:09,170 - Poziv metode print() na liniji 20
INFO  10:24:09,170 - Poziv metode print() na liniji 21
INFO  10:24:09,170 - Poziv metode print() na liniji 22
INFO  10:24:09,170 - ============================================
INFO  10:24:09,170 - Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: , -1, -1 
Prog MojProgram: notype, 0, 1 
   Con Konstante::nula: int, 0, 0 
   Con Konstante::jedan: int, 1, 0 
   Var Konstante::pet: int, 0, 0 
   Var x: int, 1, 0 
   Var y: int, 2, 0 
   Var niz: Arr of int, 3, 0 
   Meth main: int, 0, 0 



INFO  10:24:09,176 - Parsiranje uspesno zavrseno!
