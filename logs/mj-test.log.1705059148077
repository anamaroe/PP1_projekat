INFO  12:15:49,882 - Compiling source file: C:\Users\Vijesti\Desktop\pp1 projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:15:49,937 - #2 program
INFO  12:15:49,937 - #48 MojProgram
INFO  12:15:49,938 - #3 namespace
INFO  12:15:49,939 - #48 Konstante
INFO  12:15:49,939 - #18 {
INFO  12:15:49,940 - #16 const
INFO  12:15:49,941 - #48 int
INFO  12:15:49,941 - #48 nula
INFO  12:15:49,941 - #24 =
INFO  12:15:49,942 - #47 0
INFO  12:15:49,942 - #40 ;
INFO  12:15:49,942 - #16 const
INFO  12:15:49,943 - #48 int
INFO  12:15:49,943 - #48 jedan
INFO  12:15:49,943 - #24 =
INFO  12:15:49,943 - #47 1
INFO  12:15:49,943 - #40 ;
INFO  12:15:49,944 - #48 int
INFO  12:15:49,944 - #48 pet
INFO  12:15:49,944 - #40 ;
INFO  12:15:49,946 - #18 {
INFO  12:15:49,947 - #19 }
INFO  12:15:49,948 - #19 }
INFO  12:15:49,949 - #48 int
INFO  12:15:49,950 - #48 x
INFO  12:15:49,950 - #40 ;
INFO  12:15:49,950 - #48 int
INFO  12:15:49,950 - #48 y
INFO  12:15:49,950 - #40 ;
INFO  12:15:49,951 - #48 int
INFO  12:15:49,951 - #48 niz
INFO  12:15:49,951 - #22 [
INFO  12:15:49,951 - #23 ]
INFO  12:15:49,951 - #40 ;
INFO  12:15:49,952 - #18 {
INFO  12:15:49,952 - #48 int
INFO  12:15:49,952 - #48 main
INFO  12:15:49,952 - #20 (
INFO  12:15:49,953 - #21 )
INFO  12:15:49,953 - #18 {
INFO  12:15:49,957 - #48 Konstante
INFO  12:15:49,958 - #44 :
INFO  12:15:49,958 - #44 :
INFO  12:15:49,958 - #48 pet
INFO  12:15:49,958 - #24 =
INFO  12:15:49,958 - #47 5
INFO  12:15:49,959 - #40 ;
INFO  12:15:49,960 - #48 x
INFO  12:15:49,960 - #24 =
INFO  12:15:49,961 - #47 3
INFO  12:15:49,961 - #40 ;
INFO  12:15:49,961 - #48 Konstante
INFO  12:15:49,961 - #44 :
INFO  12:15:49,961 - #44 :
INFO  12:15:49,961 - #48 pet
INFO  12:15:49,961 - #24 =
INFO  12:15:49,962 - #47 2
INFO  12:15:49,962 - #40 ;
INFO  12:15:49,962 - #48 niz
INFO  12:15:49,962 - #24 =
INFO  12:15:49,962 - #12 new
INFO  12:15:49,962 - #48 int
INFO  12:15:49,962 - #22 [
INFO  12:15:49,962 - #47 3
INFO  12:15:49,963 - #23 ]
INFO  12:15:49,963 - #40 ;
INFO  12:15:49,963 - #48 niz
INFO  12:15:49,963 - #22 [
INFO  12:15:49,964 - #47 1
INFO  12:15:49,965 - #23 ]
INFO  12:15:49,965 - #24 =
INFO  12:15:49,966 - #47 2
INFO  12:15:49,966 - #40 ;
INFO  12:15:49,966 - #5 print
INFO  12:15:49,966 - #20 (
INFO  12:15:49,966 - #48 niz
INFO  12:15:49,967 - #22 [
INFO  12:15:49,967 - #47 1
INFO  12:15:49,967 - #23 ]
INFO  12:15:49,967 - #21 )
INFO  12:15:49,967 - #40 ;
INFO  12:15:49,968 - #48 x
INFO  12:15:49,968 - #33 --
INFO  12:15:49,968 - #40 ;
INFO  12:15:49,969 - #5 print
INFO  12:15:49,969 - #20 (
INFO  12:15:49,969 - #45 true
INFO  12:15:49,969 - #21 )
INFO  12:15:49,970 - #40 ;
INFO  12:15:49,970 - #5 print
INFO  12:15:49,970 - #20 (
INFO  12:15:49,970 - #46 a
INFO  12:15:49,971 - #41 ,
INFO  12:15:49,971 - #47 6
INFO  12:15:49,971 - #21 )
INFO  12:15:49,971 - #40 ;
INFO  12:15:49,973 - #5 print
INFO  12:15:49,973 - #20 (
INFO  12:15:49,973 - #48 x
INFO  12:15:49,973 - #21 )
INFO  12:15:49,973 - #40 ;
INFO  12:15:49,973 - #5 print
INFO  12:15:49,974 - #20 (
INFO  12:15:49,974 - #20 (
INFO  12:15:49,974 - #47 9
INFO  12:15:49,974 - #26 -
INFO  12:15:49,975 - #47 8
INFO  12:15:49,977 - #25 +
INFO  12:15:49,977 - #47 17
INFO  12:15:49,978 - #21 )
INFO  12:15:49,978 - #28 /
INFO  12:15:49,978 - #47 2
INFO  12:15:49,981 - #27 *
INFO  12:15:49,981 - #47 3
INFO  12:15:49,982 - #21 )
INFO  12:15:49,982 - #40 ;
INFO  12:15:49,982 - #6 return
INFO  12:15:49,982 - #47 0
INFO  12:15:49,982 - #40 ;
INFO  12:15:49,982 - #19 }
INFO  12:15:49,982 - #19 }
INFO  12:15:49,997 - Program(
  ProgName(
   MojProgram
  ) [ProgName]
  HasNamespace1(
    NoNamespace(
    ) [NoNamespace]
    HasNamespace(
      NamespaceName(
       Konstante
      ) [NamespaceName]
      Declarations(
        VariableDeclaration2(
          ConstDecls(
            ConstDecls(
              NoDeclarations(
              ) [NoDeclarations]
              ConstDecl(
                TypeNoScope(
                 int
                ) [TypeNoScope]
                NumConst(
                 nula
                 0
                ) [NumConst]
                NoMoreConstants(
                ) [NoMoreConstants]
              ) [ConstDecl]
            ) [ConstDecls]
            ConstDecl(
              TypeNoScope(
               int
              ) [TypeNoScope]
              NumConst(
               jedan
               1
              ) [NumConst]
              NoMoreConstants(
              ) [NoMoreConstants]
            ) [ConstDecl]
          ) [ConstDecls]
          NoMoreVarDecl(
            TypeNoScope(
             int
            ) [TypeNoScope]
            VarSingleSemi(
             pet
              NotArray(
              ) [NotArray]
            ) [VarSingleSemi]
          ) [NoMoreVarDecl]
        ) [VariableDeclaration2]
        NoMoreMethodDeclarations(
        ) [NoMoreMethodDeclarations]
      ) [Declarations]
    ) [HasNamespace]
  ) [HasNamespace1]
  VariableDeclaration2(
    VariableDeclaration2(
      VariableDeclaration2(
        NoDeclarations(
        ) [NoDeclarations]
        NoMoreVarDecl(
          TypeNoScope(
           int
          ) [TypeNoScope]
          VarSingleSemi(
           x
            NotArray(
            ) [NotArray]
          ) [VarSingleSemi]
        ) [NoMoreVarDecl]
      ) [VariableDeclaration2]
      NoMoreVarDecl(
        TypeNoScope(
         int
        ) [TypeNoScope]
        VarSingleSemi(
         y
          NotArray(
          ) [NotArray]
        ) [VarSingleSemi]
      ) [NoMoreVarDecl]
    ) [VariableDeclaration2]
    NoMoreVarDecl(
      TypeNoScope(
       int
      ) [TypeNoScope]
      VarSingleSemi(
       niz
        IsArray(
        ) [IsArray]
      ) [VarSingleSemi]
    ) [NoMoreVarDecl]
  ) [VariableDeclaration2]
  MoreMethodDecls(
    NoMoreMethodDeclarations(
    ) [NoMoreMethodDeclarations]
    MethodDeclaration(
      MethodTypeName(
        NonVoidRetType(
          TypeNoScope(
           int
          ) [TypeNoScope]
        ) [NonVoidRetType]
       main
      ) [MethodTypeName]
      NoFormalParams(
      ) [NoFormalParams]
      NoMoreVarDecls1(
      ) [NoMoreVarDecls1]
      SetLevel(
      ) [SetLevel]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStatement(
                              ) [NoStatement]
                              DesignStatement(
                                DesignatorStatementSemi(
                                  DesignatorEqual(
                                    DesignatorScopedIdent(
                                     Konstante
                                     pet
                                    ) [DesignatorScopedIdent]
                                    OneTermExpr(
                                      OneFactor(
                                        FactorNum(
                                         5
                                        ) [FactorNum]
                                      ) [OneFactor]
                                    ) [OneTermExpr]
                                  ) [DesignatorEqual]
                                ) [DesignatorStatementSemi]
                              ) [DesignStatement]
                            ) [Statements]
                            DesignStatement(
                              DesignatorStatementSemi(
                                DesignatorEqual(
                                  DesignatorIdent(
                                   x
                                  ) [DesignatorIdent]
                                  OneTermExpr(
                                    OneFactor(
                                      FactorNum(
                                       3
                                      ) [FactorNum]
                                    ) [OneFactor]
                                  ) [OneTermExpr]
                                ) [DesignatorEqual]
                              ) [DesignatorStatementSemi]
                            ) [DesignStatement]
                          ) [Statements]
                          DesignStatement(
                            DesignatorStatementSemi(
                              DesignatorEqual(
                                DesignatorScopedIdent(
                                 Konstante
                                 pet
                                ) [DesignatorScopedIdent]
                                OneTermExpr(
                                  OneFactor(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [OneFactor]
                                ) [OneTermExpr]
                              ) [DesignatorEqual]
                            ) [DesignatorStatementSemi]
                          ) [DesignStatement]
                        ) [Statements]
                        DesignStatement(
                          DesignatorStatementSemi(
                            DesignatorEqual(
                              DesignatorIdent(
                               niz
                              ) [DesignatorIdent]
                              OneTermExpr(
                                OneFactor(
                                  FactorNew(
                                    TypeNoScope(
                                     int
                                    ) [TypeNoScope]
                                    OneTermExpr(
                                      OneFactor(
                                        FactorNum(
                                         3
                                        ) [FactorNum]
                                      ) [OneFactor]
                                    ) [OneTermExpr]
                                  ) [FactorNew]
                                ) [OneFactor]
                              ) [OneTermExpr]
                            ) [DesignatorEqual]
                          ) [DesignatorStatementSemi]
                        ) [DesignStatement]
                      ) [Statements]
                      DesignStatement(
                        DesignatorStatementSemi(
                          DesignatorEqual(
                            DesignatorArrayIdent(
                              DesignatorIdent(
                               niz
                              ) [DesignatorIdent]
                              OneTermExpr(
                                OneFactor(
                                  FactorNum(
                                   1
                                  ) [FactorNum]
                                ) [OneFactor]
                              ) [OneTermExpr]
                            ) [DesignatorArrayIdent]
                            OneTermExpr(
                              OneFactor(
                                FactorNum(
                                 2
                                ) [FactorNum]
                              ) [OneFactor]
                            ) [OneTermExpr]
                          ) [DesignatorEqual]
                        ) [DesignatorStatementSemi]
                      ) [DesignStatement]
                    ) [Statements]
                    PrintStatement(
                      OneTermExpr(
                        OneFactor(
                          FactorDesignator(
                            DesignatorArrayIdent(
                              DesignatorIdent(
                               niz
                              ) [DesignatorIdent]
                              OneTermExpr(
                                OneFactor(
                                  FactorNum(
                                   1
                                  ) [FactorNum]
                                ) [OneFactor]
                              ) [OneTermExpr]
                            ) [DesignatorArrayIdent]
                          ) [FactorDesignator]
                        ) [OneFactor]
                      ) [OneTermExpr]
                    ) [PrintStatement]
                  ) [Statements]
                  DesignStatement(
                    DesignatorStatementSemi(
                      DesignatorDec(
                        DesignatorIdent(
                         x
                        ) [DesignatorIdent]
                      ) [DesignatorDec]
                    ) [DesignatorStatementSemi]
                  ) [DesignStatement]
                ) [Statements]
                PrintStatement(
                  OneTermExpr(
                    OneFactor(
                      FactorBool(
                       true
                      ) [FactorBool]
                    ) [OneFactor]
                  ) [OneTermExpr]
                ) [PrintStatement]
              ) [Statements]
              PrintWidthStatement(
                OneTermExpr(
                  OneFactor(
                    FactorChar(
                     a
                    ) [FactorChar]
                  ) [OneFactor]
                ) [OneTermExpr]
               6
              ) [PrintWidthStatement]
            ) [Statements]
            PrintStatement(
              OneTermExpr(
                OneFactor(
                  FactorDesignator(
                    DesignatorIdent(
                     x
                    ) [DesignatorIdent]
                  ) [FactorDesignator]
                ) [OneFactor]
              ) [OneTermExpr]
            ) [PrintStatement]
          ) [Statements]
          PrintStatement(
            OneTermExpr(
              MoreFactors(
                MoreFactors(
                  OneFactor(
                    FactorExpr(
                      ExpressionList(
                        ExpressionList(
                          OneTermExpr(
                            OneFactor(
                              FactorNum(
                               9
                              ) [FactorNum]
                            ) [OneFactor]
                          ) [OneTermExpr]
                          Sub(
                          ) [Sub]
                          OneFactor(
                            FactorNum(
                             8
                            ) [FactorNum]
                          ) [OneFactor]
                        ) [ExpressionList]
                        Add(
                        ) [Add]
                        OneFactor(
                          FactorNum(
                           17
                          ) [FactorNum]
                        ) [OneFactor]
                      ) [ExpressionList]
                    ) [FactorExpr]
                  ) [OneFactor]
                  Div(
                  ) [Div]
                  FactorNum(
                   2
                  ) [FactorNum]
                ) [MoreFactors]
                Mul(
                ) [Mul]
                FactorNum(
                 3
                ) [FactorNum]
              ) [MoreFactors]
            ) [OneTermExpr]
          ) [PrintStatement]
        ) [Statements]
        ReturnStatementExpr(
          OneTermExpr(
            OneFactor(
              FactorNum(
               0
              ) [FactorNum]
            ) [OneFactor]
          ) [OneTermExpr]
        ) [ReturnStatementExpr]
      ) [Statements]
    ) [MethodDeclaration]
  ) [MoreMethodDecls]
) [Program]
INFO  12:15:49,998 - ============================================
INFO  12:15:50,002 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 15
INFO  12:15:50,002 - Koriscenje promenljive x [Var x: int, 1, 0 ] na liniji 16
INFO  12:15:50,002 - Koriscenje promenljive Konstante::pet [Var Konstante::pet: int, 0, 0 ] na liniji 17
INFO  12:15:50,002 - Koriscenje promenljive niz [Var niz: Arr of int, 3, 0 ] na liniji 18
INFO  12:15:50,002 - Koriscenje promenljive niz [Var niz: Arr of int, 3, 0 ] na liniji 19
INFO  12:15:50,002 - Pristup elementu niza niz [Var niz: Arr of int, 3, 0 ] na liniji 19
INFO  12:15:50,002 - Koriscenje promenljive niz [Var niz: Arr of int, 3, 0 ] na liniji 20
INFO  12:15:50,002 - Pristup elementu niza niz [Var niz: Arr of int, 3, 0 ] na liniji 20
INFO  12:15:50,002 - Poziv metode print() na liniji 20
INFO  12:15:50,004 - Koriscenje promenljive x [Var x: int, 1, 0 ] na liniji 21
INFO  12:15:50,004 - Poziv metode print() na liniji 22
INFO  12:15:50,004 - Poziv metode print() na liniji 23
INFO  12:15:50,004 - Koriscenje promenljive x [Var x: int, 1, 0 ] na liniji 24
INFO  12:15:50,004 - Poziv metode print() na liniji 24
INFO  12:15:50,004 - Poziv metode print() na liniji 25
INFO  12:15:50,004 - ============================================
INFO  12:15:50,006 - Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: , -1, -1 
Prog MojProgram: notype, 0, 1 
   Con Konstante::nula: int, 0, 0 
   Con Konstante::jedan: int, 1, 0 
   Var Konstante::pet: int, 0, 0 
   Var x: int, 1, 0 
   Var y: int, 2, 0 
   Var niz: Arr of int, 3, 0 
   Meth main: int, 0, 0 



INFO  12:15:50,013 - Parsiranje uspesno zavrseno!
